
```plantuml
@startuml Process_View
actor Admin 
participant UI  as UI
participant OperationTypeControler as ctrl<<Controller>>
participant OperationTypeMapper as mapper<<Mapper>>
participant OperationType as domain<<Domain>>
participant PreparationPhase as preparation<<Domain>>
participant SurgeryPhase as surgery<<Domain>>
participant CleaningPhase as cleaning<<Domain>>
participant OperationTypeDTO as dto<<DTO>>
participant OperationTypeService as service<<Service>>
participant OperationTypeRepository as repository<<Repository>>
participant UnitOfWork

activate Admin

Admin -> UI: Make a request to create a new Operation Type
activate UI
UI --> Admin : Asks the necessary information
Admin -> UI: Provides the necessary information
UI -> ctrl : requests an http POST
activate ctrl
ctrl->mapper: toEntity(OperationTypeDto)
activate mapper
mapper->domain**:create
activate domain
domain->domain: validateUniqueName()
domain->domain: validateMedicSpecializationForSurgery()
domain->preparation**: create
domain->surgery**: create
domain->cleaning**: create

domain -->mapper: OperationType
deactivate domain
mapper-> ctrl: OperationType
deactivate mapper
ctrl->service: saveOperationType(OperationType)
activate service
service -> repository: save(OperationType)
activate repository
deactivate repository
service -> UnitOfWork: commitAsync()
activate UnitOfWork
deactivate UnitOfWork
service-->ctrl: return the new OperationType
deactivate service
ctrl-> mapper: toDTO(OperationType)
activate mapper
mapper->dto**:create
mapper-->ctrl:OperationTypeDTO
deactivate mapper

ctrl --> UI : response
deactivate ctrl
UI --> Admin : Success/Error message
deactivate UI
deactivate Admin

@enduml
```