```plantuml
@startuml Process_View_Prior_Confirmation
participant UserRoute as Route <<Route>>
participant UserController as Controller <<Controller>>
participant EditingPatientDTO as DTO <<DTO>>
participant UserService as Service <<Service>>
participant EmailService as EmailService <<Service>>
participant UserRepository as Repository <<Repository>>
participant PatientRepository as PatientRepository <<Repository>>
participant User as User <<Domain>>
participant Patient as Patient <<Domain>>
[o-> Route: PATCH (/api/users/patients/edit)
activate Route
Route -> Controller : PATCH 
activate Controller
Controller -> DTO** : recieves request body info
Controller -> Service : editPatient(EditingPatientDTO)
activate Service
Service -> Repository : findUserByEmail(email)
activate Repository
return user
Service -> Service : validateEmailIsUnique(email)
activate Service
return flag
Service -> Service : validatePhoneNumberIsUnique(phoneNumber)
activate Service
return flag
Service -> PatientRepository : findPatientByAssociatedUser(user)
activate PatientRepository
return patient
alt full name to edit is not null or empty
Service -> Patient : changeFullName(name)
Service -> PatientRepository : save(patient)
Service -> Service : logChanges(patient, "update")
activate Service
deactivate Service
end
alt information contains sensitive data
Service -> User : setConfirmationEditPatientToken(token, tokenExpirationDate)
Service -> EmailService : sendEmail(email, token)
end
return response
return response
<-- Route : response
@enduml
```