```plantuml
@startuml Process_View_Posterior_Confirmation
participant UserRoute as Route <<Route>>
participant UserController as Controller <<Controller>>
participant ConfirmationEditPatientDTO as ConfirmationDTO <<DTO>>
participant UserService as Service <<Service>>
participant UserRepository as Repository <<Repository>>
participant PatientRepository as PatientRepository <<Repository>> 
participant Patient as Patient <<Domain>>
participant PatientMapper as Mapper <<Mapper>>
[o-> Route : PATCH (/api/user/patients/edit/confirmation/{token})
activate Route
Route -> Controller : PATCH
activate Controller
Controller -> ConfirmationDTO** : recieves request body info
Controller -> Service : confirmEditPatient(confirmationEditPatientDTO)
activate Service
Service -> Repository : findUserByEmail(email)
activate Repository
return user
Service -> Service : validateToken(user, token)
activate Service
return flag
Service -> PatientRepository : findPatientByAssociatedUser(user)
activate PatientRepository
return patient
Service -> Patient : changeEmail(email)
Service -> Patient : changePhoneNumber(phoneNumber)
Service -> PatientRepository : save(patient)
Service -> Service : logChanges(patient, "update")
activate Service
deactivate Service
return response
return response
<-- Route : response
@enduml
```